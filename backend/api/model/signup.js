const mongoose = require("mongoose");
const mongoosePaginate = require('mongoose-paginate-v2');


const signupSchema = new mongoose.Schema({ // signupId is generated by Mongoose
    email:{
        // Storing Email Id of the user that he could use for login
        type: String,
        required: function(){return this.mobileNumber == null},
        trim: true,
        unique: true
    },
    mobileNumberCountryCode: {type: Number, default: 0, required: function(){return this.email == null}},
    mobileNumber: {
        // Storing Mobile number of user that he could use for login
        type: String,
        required: function(){return this.email == null},
    },
    password: {
        // Password for login (HASHED)
        type: String,
        required: true,
        trim: true,
        minlength: 6
    },
    captcha: {
        // Has user provided the correct captcha while signup
        type: Boolean,
        required: true,
        default: false
    },
    isEmailVerified: {
        type: Boolean,
        default: false
    },
    isMobileNumberVerified: {
        type: Boolean,
        default: false
    },
    referalCode: {
        type: String,
        unique: true
    },
    ipAddress: {
        // Ip address of the user's machine which is used to signup
        type: String,
        required: true,
        trim: true
    },
    userAgent: {
        // Information regarding browser and machine
        type: Object,
        required: true,
        trim: true,
    },
    isActive: {
        // Is account active or deactivated
        type: Boolean,
        required: true
    },
    profileId: {
        // Profile._id of the user
        type: mongoose.Types.ObjectId,
        ref: "Profile"
    },
    professionalProfileId: {
        // Profile._id of the user
        type: mongoose.Types.ObjectId,
        ref: "Profile"
    },
    verificationId: {
        type: mongoose.Types.ObjectId,
        ref: "Verification"
    },
    role: {
        // to differentiate between customer and admin
        type: Number,
        required: true,
        default: process.env.USER_ROLE
    },
    sessionId: {
        type: String,
        required: true,
        unique: true
    },
    transactionId: {
        type: mongoose.Types.ObjectId,
        ref: 'Transactions'
    },
    isTransactionValidated: {
        type: Boolean,
        default: false,
    },
    transactionValidTill: {
        type: Number,
        default: 0
    }
},{timestamps:true});
// timestamp stored createdAt and updatedAt

signupSchema.plugin(mongoosePaginate)

module.exports = mongoose.model("Signup", signupSchema);